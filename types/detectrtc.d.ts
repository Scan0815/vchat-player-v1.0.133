export function DetectLocalIPAddress(callback: any, stream: any): void;
export const MediaDevices: any[];
export const MediaStream: boolean;
export const MediaStreamTrack: boolean;
export const RTCPeerConnection: boolean;
export const audioInputDevices: any[];
export const audioOutputDevices: any[];
export const browser: {
    fullVersion: string;
    isNodejs: boolean;
    isPrivateBrowsing: boolean;
    name: string;
    version: number;
};
export function checkWebSocketsSupport(callback: any): void;
export const displayAspectRatio: string;
export const displayResolution: string;
export const hasMicrophone: boolean;
export const hasSpeakers: boolean;
export const hasWebcam: boolean;
export const isApplyConstraintsSupported: boolean;
export const isAudioContextSupported: boolean;
export const isCanvasSupportsStreamCapturing: boolean;
export const isCreateMediaStreamSourceSupported: boolean;
export const isGetUserMediaSupported: boolean;
export const isMobileDevice: boolean;
export const isMultiMonitorScreenCapturingSupported: boolean;
export const isORTCSupported: boolean;
export const isPromisesSupported: boolean;
export const isRTPSenderReplaceTracksSupported: boolean;
export const isRemoteStreamProcessingSupported: boolean;
export const isRtpDataChannelsSupported: boolean;
export const isScreenCapturingSupported: boolean;
export const isSctpDataChannelsSupported: boolean;
export const isSetSinkIdSupported: boolean;
export const isVideoSupportsStreamCapturing: boolean;
export const isWebRTCSupported: boolean;
export const isWebSocketsBlocked: boolean;
export const isWebSocketsSupported: boolean;
export const isWebsiteHasMicrophonePermissions: boolean;
export const isWebsiteHasWebcamPermissions: boolean;
export function load(callback: any): void;
export const osName: string;
export const osVersion: string;
export const version: string;
export const videoInputDevices: any[];
